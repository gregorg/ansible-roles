- name: PGTOOLS | repmgr | git
  git: repo=https://github.com/2ndQuadrant/repmgr.git dest=/usr/local/repmgr depth=1
  register: repmgr_git

- name: PGTOOLS | repmgr | deps
  apt: pkg={{ item }} state=present
  with_items:
  - libxslt-dev
  - libxml2-dev
  - libpam-dev
  - libedit-dev
  - libselinux1-dev

- name: APT | some tools
  apt: pkg={{ item }} state=latest
  with_items:
  - xz-utils

# force rebuild
- name: PGTOOLS | repmgr | make clean
  shell: chdir=/usr/local/repmgr make USE_PGXS=1 clean
  when: repmgr_git.changed

- name: PGTOOLS | repmgr | make
  shell: chdir=/usr/local/repmgr make USE_PGXS=1 install
  when: repmgr_git.changed

- name: PGTOOLS | repmgr | symlinks
  file: src=/usr/lib/postgresql/{{ pg_version }}/bin/{{ item }} dest=/usr/local/bin/{{ item }} state=link
  with_items:
  - repmgr
  - repmgrd

- name: REPMGR | /etc/repmgr
  file: path=/etc/repmgr state=directory owner=postgres group=postgres

- name: REPMGR | repmgr conf
  template: src=repmgr.conf dest=/etc/repmgr/repmgr.conf owner=postgres group=postgres

- name: REPMGR | repmgr hba
  lineinfile: dest=/etc/postgresql/{{ pg_version }}/main/pg_hba.conf line="{{ item }}"
  with_items:
  - "host    {{ repmgr_db }}       {{ repmgr_user }}  {{ repmgr_network }}         trust"
  - "host    replication           {{ repmgr_user }}  {{ repmgr_network }}         trust"
  notify: pg_reload

- name: PostgreSQL base replication config files (need to be enabled)
  template: src=replic.conf dest=/etc/postgresql/{{ pg_version }}/main/conf.d/replic.conf owner=postgres group=postgres
  notify: pg_reload

- name: PG | SSH .ssh folder
  file: path=/var/lib/postgresql/.ssh state=directory owner=postgres group=postgres mode=0700

- name: PG | SSH key
  copy: src={{ item }} dest=/var/lib/postgresql/.ssh/ owner=postgres group=postgres mode=0600
  with_items:
  - id_rsa
  - id_rsa.pub

- name: PG | SSH authorized_keys
  authorized_key: user=postgres key="{{ lookup('file', 'id_rsa.pub') }}"

- name: PG | archive folder
  file: path={{ pg_archive_path }} state=directory owner=postgres group=postgres

- name: REPMGR | add repmgr user
  postgresql_user: name={{ repmgr_user }} role_attr_flags=SUPERUSER,REPLICATION
  become: yes
  become_user: postgres
  when: not pg_read_only

- name: REPMGR | repmgr DB
  postgresql_db: name={{ repmgr_db }} owner={{ repmgr_user }}
  become: yes
  become_user: postgres
  ignore_errors: True

- name: PURGE ARCHIVES SCRIPT
  copy: src=pg_purge_archives dest=/usr/local/sbin/ mode=u+x owner=postgres

- name: CRONTAB
  template: src=crontab dest=/etc/cron.d/pg-purge-archives
 
- name: purge logfile owner
  command: "chown postgres: /var/log/postgresql/purge-archives.log"
  changed_when: False

